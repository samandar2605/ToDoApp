basePath: /v1
definitions:
  models.AuthResponse:
    properties:
      access_token:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      image_url:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      update_at:
        type: string
    type: object
  models.CreateNote:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  models.CreateUser:
    properties:
      email:
        type: string
      first_name:
        type: string
      image_url:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.ForgotPasswordRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  models.GetAllNotesResponse:
    properties:
      count:
        type: integer
      users:
        items:
          $ref: '#/definitions/models.Note'
        type: array
    type: object
  models.GetAllUsersResponse:
    properties:
      count:
        type: integer
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 16
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.Note:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      first_name:
        maxLength: 30
        minLength: 2
        type: string
      image_url:
        type: string
      last_name:
        maxLength: 30
        minLength: 2
        type: string
      password:
        maxLength: 16
        minLength: 6
        type: string
      phone_number:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    type: object
  models.ResponseOK:
    properties:
      message:
        type: string
    type: object
  models.UpdatePasswordRequest:
    properties:
      password:
        type: string
    required:
    - password
    type: object
  models.User:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      image_url:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      update_at:
        type: string
    type: object
  models.VerifyRequest:
    properties:
      code:
        type: string
      email:
        type: string
    required:
    - code
    - email
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is a blog service api.
  title: Swagger for blog api
  version: "1.0"
paths:
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Forgot password
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Forgot password
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Login user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a user
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Register a user
      tags:
      - auth
  /auth/update-password:
    post:
      consumes:
      - application/json
      description: Update password
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update password
      tags:
      - auth
  /auth/verify:
    post:
      consumes:
      - application/json
      description: Verify user
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.VerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Verify user
      tags:
      - auth
  /auth/verify-forgot-password:
    post:
      consumes:
      - application/json
      description: Verify forgot password
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.VerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Verify forgot password
      tags:
      - auth
  /notes:
    get:
      consumes:
      - application/json
      description: Get all Notes
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: search
        type: string
      - in: query
        name: sort_by_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllNotesResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all Notes
      tags:
      - Notes
    post:
      consumes:
      - application/json
      description: Create a Note
      parameters:
      - description: Note
        in: body
        name: Note
        required: true
        schema:
          $ref: '#/definitions/models.CreateNote'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Note'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a Note
      tags:
      - Notes
  /notes/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Note
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a Note
      tags:
      - Notes
    get:
      consumes:
      - application/json
      description: Get note by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Note'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get note by id
      tags:
      - Notes
    put:
      consumes:
      - application/json
      description: Update a notes
      parameters:
      - description: note
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/models.CreateNote'
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Note'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update a note
      tags:
      - Notes
  /users:
    get:
      consumes:
      - application/json
      description: Get all Users
      parameters:
      - in: query
        name: limit
        required: true
        type: integer
      - in: query
        name: page
        required: true
        type: integer
      - in: query
        name: search
        type: string
      - in: query
        name: sort_by_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllUsersResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all Users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a user
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a User
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get user by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get user by id
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a userss
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update a user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
